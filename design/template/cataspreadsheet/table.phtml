
<table id="catalin-spreadsheet-table" class="data-table">
    <?php for ($x = 0; $x <= 7; $x++): ?>
        <tr>
            <?php for ($y = 0; $y <= 7; $y++): ?>
                <td>
                    <input type="text" class="input-text" value="" />
                </td>
            <?php endfor ?>
        </tr>
    <?php endfor ?>
</table>

<form action="#">
    <div class="input-box">
        <input type="text" id="catalin-spreadsheet-key" name="catalin-spreadsheet-key" class="input-text required-entry" value="" />
    </div>
    <div class="buttons-set">
        <button id="catalin-spreadsheet-save" type="button" class="button">
            <span>
                <span><?php echo $this->__('Save') ?></span>
            </span>
        </button>
        <button id="catalin-spreadsheet-load" type="button" class="button">
            <span>
                <span><?php echo $this->__('Load') ?></span>
            </span>
        </button>
    </div>
</form>

<script>
    (function ($) {

        // Remove the two dummy functions below, if you want to add a test harness
        var save_data = function (key, data) {
            console.log(key, data);
        };

        var load_data = function (key) {
            var testJSON = {
                'test-1': '[[1, 2],[],[0, 4, 0, 5, 8]]',
                'test-2': '[[],[1, 3, 4, 8],[9, 4, 0]]',
                'test-3': '[[],[1, 3, 4, 8],[9, 4, 0],[], [],[1, 3, 4, 8],[9, 4, 0],[0, 1]]'
            };

            return testJSON[key];
        };


        // Is any array longer than 8 items?
        var isDataGood = function (data) {
            var OK = true;

            for (var a = 0; a < data.length; a += 1) {
                if ( a === 8 ) {
                    OK = false;
                    break;
                }

                for (var b = 0; b < data[a].length; b += 1) {
                    if ( b === 8 ) {
                        OK = false;
                        break;
                    }
                }
            }

            return OK;
        };

        // Remove empty indexes unless followed by a non-empty index
        var sanitizeData = function (data) {
            // First remove empty values at the end of a collection
            for (var a = 0; a < data.length; a += 1) {
                for (var b = data[a].length - 1; b >= 0; b -=1) {
                    if (data[a][b] !== '') {
                        break;
                    }

                    data[a] = data[a].slice(0, b);
                }
            }

            // Then remove empty collections at the end of the array
            for (var i = data.length - 1; i >= 0; i -=1) {
                if (data[i].length) {
                    break;
                }

                data = data.slice(0, i);
            }

            return data;
        };

        var extractDataFromTable = function ($table) {
            var data = [];

            $table.find('tr').each(function () {
                var $tr = $(this),
                    a = $tr.index();

                data[a] = [];

                $tr.find('td').each(function () {
                    var $td = $(this),
                        $input = $td.find('input'),
                        b = $td.index();

                    data[a][b] = $input.val() || '';

                });
            });

            // Let's explain some other time why I chose to save val() || '' at 100% of indexes and sanitize later
            return sanitizeData(data);
        };

        var populateTableWithData = function ($table, data) {
            // Reset table of any old values
            $table.find('td').find('input').val('');

            for (var a = 0; a < data.length; a += 1) {
                for (var b = 0; b < data[a].length; b += 1) {
                    // If there's something at the index, where something can also be 0
                    if ( data[a][b] || data[a][b] === 0) {
                        var $target = $table.find('tr').eq(a).find('td').eq(b).find('input'),
                            newValue = data[a][b];

                        $target.val(newValue);
                    }
                }
            }
        };

        $(document).on('ready', function () {
            var $body = $('body'),
                $table = $body.find('#catalin-spreadsheet-table'),
                $dataKey = $body.find('#catalin-spreadsheet-key'),
                $saveBtn = $body.find('#catalin-spreadsheet-save'),
                $loadBtn = $body.find('#catalin-spreadsheet-load');

            $saveBtn.on('click', function () {
                var key = $dataKey.val();

                if ( !key ) {
                    alert('Error! You need to add a key if you want to save.');
                    return;
                }

                var data = extractDataFromTable($table);

                if ( !isDataGood(data) ) {
                    alert('Error! Your table is obviously larger than 8 * 8.');
                    return;
                }

                var dataAsString = JSON.stringify(data);

                save_data(key, dataAsString);
            });

            $loadBtn.on('click', function () {
                var key = $dataKey.val();

                if ( !key ) {
                    alert('Error! You should add a key if you want to load something.');
                    return;
                }

                var dataAsString = load_data(key);

                if (!dataAsString) {
                    alert('Error! This key does not produce any data.');
                    return;
                }

                var data = JSON.parse(dataAsString);

                if ( !isDataGood(data) ) {
                    alert('Error! The array you are trying to insert is larger than 8 * 8.');
                    return;
                }

                populateTableWithData($table, data);
            });
        });
    })(jQuery);
</script>